# Generated by Django 4.1.1 on 2022-10-07 08:15

import django.core.validators
from django.db import migrations, models
import timezone_field.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="SocialProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("video_call_friendly", models.BooleanField(default=True)),
                ("languages", models.CharField(blank=True, max_length=64)),
                ("location", models.CharField(blank=True, max_length=64)),
                (
                    "raw_xp",
                    models.IntegerField(
                        blank=True,
                        default=0,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(50),
                        ],
                    ),
                ),
                ("purpose", models.CharField(blank=True, max_length=255)),
                (
                    "timezone",
                    timezone_field.fields.TimeZoneField(default="America/Los_Angeles"),
                ),
                (
                    "preferred_timezone_deviation",
                    models.CharField(
                        choices=[
                            ("+/- 0", "+/- 0"),
                            ("+/- 2", "+/- 2"),
                            ("+/- 4", "+/- 4"),
                            ("+/- 6", "+/- 6"),
                            ("+/- 8", "+/- 8"),
                            ("Any", "Any"),
                        ],
                        default="Any",
                        max_length=5,
                    ),
                ),
                ("dev_type", models.CharField(blank=True, max_length=128)),
                (
                    "preferred_dev_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Mobile/Web", "Mobile/Web"),
                            ("Native Desktop", "Native Desktop"),
                            ("Game Development", "Game Development"),
                            ("Systems", "Systems"),
                            ("Hardware", "Hardware"),
                            ("Blockchain", "Blockchain"),
                            ("AI", "AI"),
                            ("Other", "Other"),
                        ],
                        max_length=64,
                    ),
                ),
                (
                    "idea_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Open to exploring ideas.", "Open to exploring ideas."),
                            (
                                "Not open to exploring ideas.",
                                "Not open to exploring ideas.",
                            ),
                            (
                                "Need people working on my idea.",
                                "Need people working on my idea.",
                            ),
                        ],
                        max_length=64,
                    ),
                ),
                ("available_this_week", models.BooleanField(default=False)),
                ("available_always_off", models.BooleanField(default=False)),
                ("indirect_matching", models.BooleanField(default=True)),
                (
                    "blocked_users",
                    models.ManyToManyField(blank=True, to="social.socialprofile"),
                ),
                (
                    "circle",
                    models.ManyToManyField(blank=True, to="social.socialprofile"),
                ),
                (
                    "matches_this_week",
                    models.ManyToManyField(blank=True, to="social.socialprofile"),
                ),
                (
                    "shadowed_users",
                    models.ManyToManyField(blank=True, to="social.socialprofile"),
                ),
                (
                    "skipped_users",
                    models.ManyToManyField(blank=True, to="social.socialprofile"),
                ),
            ],
        ),
    ]
